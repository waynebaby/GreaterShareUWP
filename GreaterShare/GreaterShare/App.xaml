<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:GreaterShare"
    xmlns:sharemodel="using:GreaterShare.Models.Sharing.ShareItems"

    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:sharing="using:GreaterShare.Models.Sharing"
      xmlns:Glue="using:GreaterShare.Glue"  xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Behaviors="using:MVVMSidekick.Behaviors"
    x:Class="GreaterShare.App"
    mc:Ignorable="d"
          xmlns:vm="using:GreaterShare.ViewModels"
    RequestedTheme="Light">
    <Application.Resources>
        <Glue:IsFileItemImageFileConverter x:Key="IsFileItemImageFileConverter"></Glue:IsFileItemImageFileConverter>
        <Glue:DebuggingEmptyConverter x:Key="DebuggingEmptyConverter"/>
        <Glue:IsNotNullConverter x:Key="IsNotNullConverter"/>
        <Glue:IsWellFormedUriStringConveter x:Key="IsWellFormedUriStringConveter"/>
        <Glue:FalseIfIsStringNullOrEmptyConverter x:Key="FalseIfIsStringNullOrEmptyConverter"/>
        <Glue:SaveImageCommand x:Key="SaveImageCommand" />
        <Glue:HideWhenNotMatchConverter x:Key="HideWhenNotMatchConverter"/>
        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName" x:Uid="AppName"></x:String>
        <x:String x:Key="AppendToTextShare" >Append To Text Share</x:String>
        <x:String x:Key="VisitUri">Visit Uri</x:String>
        <Glue:AddTextCommentsCommand x:Key="AddTextCommentCommand"/>
        <Glue:UriStringConverter x:Key="UriStringConverter"/>
        <Glue:HideWhenIsNotEditingConverter x:Key="HideWhenIsNotEditingConverter"/>

        <Style  TargetType="TextBlock" x:Key="ContentViewerLabel"  >
            <Setter Property="Margin" Value="32,4,0,0" />
            <Setter Property="FontSize"  Value="18" />
        </Style>
        <Style  TargetType="HyperlinkButton" x:Key="LabelButton"  >
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="IndicatorListViewItem" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="16"/>
            <Setter Property="MinHeight" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter 
                            CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                            ContentMargin="{TemplateBinding Padding}"
                            CheckMode="Inline" 
                            ContentTransitions="{TemplateBinding ContentTransitions}" 
                            CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                            DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                            FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                            PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                            PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" 
                            SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}"
                            SelectionCheckMarkVisualEnabled="True" 
                            SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                            SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}" 
                            SelectedBackground="{ThemeResource SystemControlHighlightListAccentLowBrush}" 
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="StackPanel" x:Key="LabelButtons">
            <Setter Property="RelativePanel.AlignRightWithPanel"  Value="True" />
            <Setter Property="RelativePanel.AlignLeftWithPanel"  Value="True" />
            <Setter Property="RelativePanel.AlignBottomWithPanel"  Value="True" />
            <Setter Property="RelativePanel.AlignTopWithPanel"  Value="False" />
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Center" />

        </Style>
        <Glue:CopyShareItemToClipboardCommand x:Key="copyCommand" />
        <!--<sharing:CopyShareItemToClipboardCommand x:Key="shareThisCommand" />-->

        <Glue:StreamImageSourceConverter x:Key="StreamImageSourceConverter"/>
        <sharemodel:ApplicationLinkShareItem     x:Key="shareItemDesignInstanceApplicationLinkShareItem"/>
        <!--<sharemodel:CustomDataShareItem          x:Key="shareItemDesignInstanceCustomDataShareItem"/>-->
        <sharemodel:DelayRenderedImageShareItem  x:Key="shareItemDesignInstanceDelayRenderedImageShareItem"/>
        <!--<sharemodel:ErrorMessageShareItem        x:Key="shareItemDesignInstanceErrorMessageShareItem"/>-->
        <sharemodel:FilesShareItem               x:Key="shareItemDesignInstanceFilesShareItem"/>
        <sharemodel:HtmlShareItem                x:Key="shareItemDesignInstanceHtmlShareItem"/>
        <!--<sharemodel:ImagesShareItem              x:Key="shareItemDesignInstanceImagesShareItem"/>-->
        <sharemodel:ReceivedShareItem            x:Key="shareItemDesignInstanceReceivedShareItem"/>
        <!--<sharemodel:TextShareItem               x:Key="shareItemDesignInstanceTextShareItem"/>-->
        <sharemodel:WebLinkShareItem             x:Key="shareItemDesignInstanceWebLinkShareItem"/>


        <DataTemplate x:Key="DataTemplateOfApplicationLinkShareItem">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  d:DataContext="{StaticResource shareItemDesignInstanceApplicationLinkShareItem}" >
                <RelativePanel Margin="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Interactivity:Interaction.Behaviors>
                        <Glue:PanelFitParentSizeBehavior/>
                    </Interactivity:Interaction.Behaviors>
                    <TextBlock x:Name="label" Style="{StaticResource ContentViewerLabel}" >
                    	<Run x:Uid="ApplicationLink" Text="Application Link:"/>
                    </TextBlock>
                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}"  
                    Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}}" 
                    RelativePanel.AlignLeftWithPanel="True"  RelativePanel.AlignTopWithPanel="True"/>
                    <StackPanel  x:Name="linkButtons"   Style="{StaticResource LabelButtons}"  Orientation="Horizontal" >
                        <HyperlinkButton  x:Uid="HyperLinkCopy" Style="{StaticResource LabelButton}" x:Name="linkCopy"  Command="{StaticResource copyCommand}" CommandParameter="{Binding Mode=OneWay}" >
                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE16F;" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </StackPanel>
                        </HyperlinkButton>
                        <HyperlinkButton   x:Uid="HyperLinkVisit"   Style="{StaticResource LabelButton}" x:Name="linkVisit"  NavigateUri="{Binding ApplicationLink}"  >
                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE128;" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </StackPanel>
                        </HyperlinkButton>
                    </StackPanel>

                    <TextBox
                         RelativePanel.Below="label"             
                        RelativePanel.Above="linkButtons"                            
                        RelativePanel.AlignRightWithPanel="True" 
                        RelativePanel.AlignLeftWithPanel="True"  
                        ScrollViewer.HorizontalScrollMode="Auto" 
                        ScrollViewer.VerticalScrollMode="Auto"
                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"                     
        				x:Name="linkText"  Margin="8" Text="{Binding ApplicationLink, Converter={StaticResource UriStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"   TextWrapping="Wrap"/>
                </RelativePanel>
            </Grid>
        </DataTemplate>
        <!--<DataTemplate x:Key="DataTemplateOfCustomDataShareItem">
            <StackPanel d:DataContext="{StaticResource shareItemDesignInstanceCustomDataShareItem}" >
                <TextBlock>
        			<Run Text="DataTemplateOfCustomDataShareItem"/>
                </TextBlock>
                <TextBox Text="{Binding ''}"/>
            </StackPanel>
        </DataTemplate>-->
        <DataTemplate x:Key="DataTemplateOfDelayRenderedImageShareItem">

            <RelativePanel  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" d:DataContext="{StaticResource shareItemDesignInstanceDelayRenderedImageShareItem}" >
                <Interactivity:Interaction.Behaviors>
                    <Glue:PanelFitParentSizeBehavior/>
                </Interactivity:Interaction.Behaviors>
                <TextBlock x:Name="label" Style="{StaticResource ContentViewerLabel}" >
        			<Run x:Uid="ImageToShare"  Text="Image to Share"/>
                </TextBlock>
                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}" 
                    Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" 
                    RelativePanel.AlignLeftWithPanel="True"  RelativePanel.AlignTopWithPanel="True"/>

                <Image  
                        x:Name="SharingImage"       
                	    RelativePanel.Below="label"             
                        RelativePanel.Above="linkButtons"                            
                        RelativePanel.AlignRightWithPanel="True" 
                        RelativePanel.AlignLeftWithPanel="True"  
                        ScrollViewer.HorizontalScrollMode="Auto" 
                        ScrollViewer.VerticalScrollMode="Auto"
                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"                       
                        Source="{Binding SelectedImage, Converter={StaticResource StreamImageSourceConverter}}" >
                    <!--<FlyoutBase.AttachedFlyout>
                        <MenuFlyout>
                            <MenuFlyoutItem CommandParameter="{Binding SelectedImage}" Text="Inking Comment">
                                <MenuFlyoutItem.Command>
                                    <Glue:RaiseEventMassageCommand EventMessage="ImageInkComment">
                                    </Glue:RaiseEventMassageCommand>
                                </MenuFlyoutItem.Command>
                            </MenuFlyoutItem>
                        </MenuFlyout>                    
                    </FlyoutBase.AttachedFlyout>
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="RightTapped">
                            <Core:InvokeCommandAction  CommandParameter="{Binding ElementName=SharingImage}">
                                <Core:InvokeCommandAction.Command>
                                    <Glue:ShowFlyoutCommand></Glue:ShowFlyoutCommand>
                                </Core:InvokeCommandAction.Command>
                            </Core:InvokeCommandAction>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>-->
                </Image>



                <StackPanel  x:Name="linkButtons"   Style="{StaticResource LabelButtons}"  Orientation="Horizontal" >

                    <HyperlinkButton x:Uid="HyperLinkCopy" Style="{StaticResource LabelButton}" x:Name="linkCopy"  Command="{StaticResource copyCommand}" CommandParameter="{Binding Mode=OneWay}" >
                        <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                            <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE16F;" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </StackPanel>
                    </HyperlinkButton>

                    <HyperlinkButton x:Uid="HyperLinkAddComment"  Style="{StaticResource LabelButton}" x:Name="linkComment"  Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"  Command="{StaticResource AddTextCommentCommand}"  >
                        <!--Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"-->
                        <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7E7;" />

                        </StackPanel>
                    </HyperlinkButton>


                    <HyperlinkButton  Style="{StaticResource LabelButton}" x:Uid="HyperLinkSaveToFile" x:Name="linkSave"  Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"  Command="{StaticResource SaveImageCommand}" CommandParameter="{Binding SelectedImage}" >
                        <!--Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"-->
                        <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                            <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE105;" HorizontalAlignment="Center" VerticalAlignment="Center" />

                        </StackPanel>
                    </HyperlinkButton>
                    <HyperlinkButton  x:Uid="HyperLinkMarkAndHighlight"  Style="{StaticResource LabelButton}"   Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"  CommandParameter="{Binding SelectedImage}">
                        <HyperlinkButton.Command >
                            <Glue:RaiseEventMassageCommand EventMessage="ImageInkComment" />
                        </HyperlinkButton.Command>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7E6;" />
                    </HyperlinkButton>
                </StackPanel>
            </RelativePanel>
        </DataTemplate>

        <DataTemplate x:Key="FileGridItem">
            <RelativePanel  Height="135" Width="120" BorderThickness="{StaticResource ThinBoderThickness}" BorderBrush="Gray" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#20202020" >
                <Image x:Name="image"
                    Margin="10"
        			Source="{Binding Thumbnail, Converter={StaticResource StreamImageSourceConverter}}" Stretch="Uniform"
                    Width="80"
                    Height="80"
        			HorizontalAlignment="Center" 
        			VerticalAlignment="Center"  
        			RelativePanel.AlignLeftWithPanel="True"
        			RelativePanel.AlignTopWithPanel="True" 
        			RelativePanel.AlignRightWithPanel="True"                     
                    />

                <TextBlock TextWrapping="WrapWholeWords"    Name="fileName"
        			Text="{Binding FileName}"              			
        			RelativePanel.AlignHorizontalCenterWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True"
                    />
            </RelativePanel>
        </DataTemplate>
        <DataTemplate x:Key="DataTemplateOfFilesShareItem">
            <RelativePanel Margin="8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  d:DataContext="{StaticResource shareItemDesignInstanceFilesShareItem}" >
                <Interactivity:Interaction.Behaviors>
                    <Glue:PanelFitParentSizeBehavior/>
                </Interactivity:Interaction.Behaviors>
                <TextBlock x:Name="label" Style="{StaticResource ContentViewerLabel}" >
        			<Run x:Uid="FilesToShare" Text="Files to Share"/>
                </TextBlock>
                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}" 
                    Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" 
                    RelativePanel.AlignLeftWithPanel="True"  RelativePanel.AlignTopWithPanel="True"/>

                <GridView x:Name="StorageFiles" SelectionMode="Single"  Margin="8" ItemsSource="{Binding StorageFiles}" 
                        RelativePanel.Below="label"             
                        RelativePanel.Above="linkButtons"                            
                        RelativePanel.AlignRightWithPanel="True" 
                        RelativePanel.AlignLeftWithPanel="True"  
                        ScrollViewer.HorizontalScrollMode="Auto" 
                        ScrollViewer.VerticalScrollMode="Auto"
                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"  
                        SelectedItem="{Binding SelectedStorageFile, Mode=TwoWay}"
                        
                    ItemTemplate="{StaticResource FileGridItem}" >
                    <GridView.ItemsPanel >
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid  Orientation="Horizontal" >

                            </ItemsWrapGrid>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                </GridView>
                <StackPanel  x:Name="linkButtons"  Style="{StaticResource LabelButtons}"  Orientation="Horizontal" >
                    <HyperlinkButton x:Uid="HyperLinkAddComment"  Style="{StaticResource LabelButton}" x:Name="linkComment"  Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"  Command="{StaticResource AddTextCommentCommand}" >
                        <!--Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"-->
                        <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7E7;" />
                        </StackPanel>
                    </HyperlinkButton>
                    <HyperlinkButton x:Uid="HyperLinkOpenAsImage" Style="{StaticResource LabelButton}" x:Name="linkToImage"  Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"  Command="{Binding CommandRaiseOpenAsImageShare}" >
                        <!--Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"-->
                        <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE187;" />
                        </StackPanel>
                    </HyperlinkButton>
                </StackPanel>
            </RelativePanel>
        </DataTemplate>
        <DataTemplate x:Key="DataTemplateOfHtmlShareItem">
            <RelativePanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  d:DataContext="{StaticResource shareItemDesignInstanceHtmlShareItem}" Margin="8" >
                <Interactivity:Interaction.Behaviors>
                    <Glue:PanelFitParentSizeBehavior/>
                </Interactivity:Interaction.Behaviors>
                <TextBlock x:Name="label" Style="{StaticResource ContentViewerLabel}" >
        				<Run x:Uid="HtmlContent" Text="Html Content:"/>
                </TextBlock>
                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}" 
                    Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" 
                    RelativePanel.AlignLeftWithPanel="True"  RelativePanel.AlignTopWithPanel="True"/>

                <StackPanel  x:Name="linkButtons"   Style="{StaticResource LabelButtons}"  Orientation="Horizontal" >

                    <HyperlinkButton  x:Uid="HyperLinkCopy" Style="{StaticResource LabelButton}" x:Name="linkCopy"  Command="{StaticResource copyCommand}" CommandParameter="{Binding Mode=OneWay}" >
                        <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                            <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE16F;" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </StackPanel>
                    </HyperlinkButton>
                </StackPanel>

                <WebView    
                        RelativePanel.Below="label"             
                        RelativePanel.Above="linkButtons"                            
                        RelativePanel.AlignRightWithPanel="True" 
                        RelativePanel.AlignLeftWithPanel="True"  
                        ScrollViewer.HorizontalScrollMode="Auto" 
                        ScrollViewer.VerticalScrollMode="Auto"
                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"                         
                          IsTapEnabled="False"  IsDoubleTapEnabled="False"   IsRightTapEnabled="False"                       >
                    <Interactivity:Interaction.Behaviors>
                        <Core:DataTriggerBehavior Binding="{Binding HtmlFragment}" ComparisonCondition="NotEqual" Value="{x:Null}" >
                            <Glue:NaviagteToStringAction NaviagteHtmlString="{Binding HtmlFragment}"/>
                        </Core:DataTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </WebView>
            </RelativePanel>


        </DataTemplate>
        <DataTemplate x:Key="DataTemplateOfTextShareItem">
            <Grid   HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                <d:Grid.DataContext>
                    <sharemodel:TextShareItem/>
                </d:Grid.DataContext>
                <Interactivity:Interaction.Behaviors>
                    <Glue:PanelFitParentSizeBehavior/>
                </Interactivity:Interaction.Behaviors>
                <RelativePanel Margin="8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TextBlock x:Name="label" Style="{StaticResource ContentViewerLabel}" >
        				<Run x:Uid="TextContent"  Text="Text Content:"/>
                    </TextBlock>
                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}" 
                    Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" 
                    RelativePanel.AlignLeftWithPanel="True"  RelativePanel.AlignTopWithPanel="True"/>

                    <StackPanel  x:Name="linkButtons"   Style="{StaticResource LabelButtons}"  Orientation="Horizontal" >
                        <HyperlinkButton x:Uid="HyperLinkBinaryStringTools" Style="{StaticResource LabelButton}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}">
                            <HyperlinkButton.Command>
                                <Glue:ShowFlyoutCommand></Glue:ShowFlyoutCommand>
                            </HyperlinkButton.Command>
                            <FlyoutBase.AttachedFlyout>
                                <MenuFlyout>
                                    <!--<MenuFlyoutSubItem Text="">
                                        <MenuFlyoutSubItem.Items>-->
                                    <MenuFlyoutSubItem x:Uid="MenuFlyoutSubItemConvertTo" Text="Convert to" >
                                        <MenuFlyoutSubItem.Items>
                                            <MenuFlyoutItem Command="{Binding  CommandToBase64}" CommandParameter="UTF8" Text="UTF8" ></MenuFlyoutItem>
                                            <MenuFlyoutItem Command="{Binding  CommandToBase64}" CommandParameter="ASCII" Text="ASCII" ></MenuFlyoutItem>
                                        </MenuFlyoutSubItem.Items>
                                    </MenuFlyoutSubItem>
                                    <MenuFlyoutSubItem  x:Uid="MenuFlyoutSubItemConvertBackFrom"  Text="Convert back from" >
                                        <MenuFlyoutSubItem.Items>
                                            <MenuFlyoutItem Command="{Binding  CommandFromBase64}" CommandParameter="UTF8" Text="UTF8" ></MenuFlyoutItem>
                                            <MenuFlyoutItem Command="{Binding  CommandFromBase64}" CommandParameter="ASCII" Text="ASCII" ></MenuFlyoutItem>
                                        </MenuFlyoutSubItem.Items>
                                    </MenuFlyoutSubItem>
                                    <!--</MenuFlyoutSubItem.Items>
                                    </MenuFlyoutSubItem>-->


                                </MenuFlyout>
                            </FlyoutBase.AttachedFlyout>

                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#x4DFF;" HorizontalAlignment="Center" VerticalAlignment="Center" />

                            </StackPanel>
                        </HyperlinkButton>

                        <HyperlinkButton x:Uid="HyperLinkUrlTools"  Style="{StaticResource LabelButton}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}">
                            <HyperlinkButton.Command>
                                <Glue:ShowFlyoutCommand></Glue:ShowFlyoutCommand>
                            </HyperlinkButton.Command>
                            <FlyoutBase.AttachedFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem Command="{Binding  CommandMagnetChop}"
                                                    x:Uid="MenuFlyoutItemCommandMagnetChop"
                                                    Text="Chop a Magnet Link to Binary String."/>
                                    <MenuFlyoutItem Command="{Binding CommandMagnetRecovery}"
                                                    Text="Recover a Magnet Link from Binary String."
                                                    x:Uid="MenuFlyoutItemCommandMagnetRecovery"
                                                    
                                                    />
                                </MenuFlyout>
                            </FlyoutBase.AttachedFlyout>

                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#x26D3;" HorizontalAlignment="Center" VerticalAlignment="Center" />

                            </StackPanel>
                        </HyperlinkButton>


                        <HyperlinkButton  x:Uid="HyperLinkCopy" Style="{StaticResource LabelButton}" 
                            x:Name="linkCopy"  Command="{StaticResource copyCommand}" CommandParameter="{Binding Mode=OneWay}" >
                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE16F;" HorizontalAlignment="Center" VerticalAlignment="Center" />

                            </StackPanel>
                        </HyperlinkButton>
                        <HyperlinkButton  
                         Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"                                      
                            IsEnabled="{Binding Text,Converter={StaticResource IsWellFormedUriStringConveter}}"  
                            Command="{Binding CommandConvertToWebUri}"
                             
                           x:Uid="VisitUri" >
                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE12B;" />
                            </StackPanel>
                        </HyperlinkButton>

                        <HyperlinkButton x:Uid="HyperLinkUndo" Command="{Binding CommandBackHistory}" >
                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7A7;" />
                            </StackPanel>
                        </HyperlinkButton>

                    </StackPanel>

                    <TextBox 
                        RelativePanel.Below="label"             
                        RelativePanel.Above="linkButtons"                            
                        RelativePanel.AlignRightWithPanel="True" 
                        RelativePanel.AlignLeftWithPanel="True"  
                        ScrollViewer.HorizontalScrollMode="Auto" 
                        ScrollViewer.VerticalScrollMode="Auto"
                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"                           
        				x:Name="linkText"  Margin="8" Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   MinWidth="100" TextWrapping="Wrap" AcceptsReturn="True"/>
                </RelativePanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="DataTemplateOfWebLinkShareItem">

            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" d:DataContext="{StaticResource shareItemDesignInstanceWebLinkShareItem}" >
                <Interactivity:Interaction.Behaviors>
                    <Glue:PanelFitParentSizeBehavior/>
                </Interactivity:Interaction.Behaviors>
                <RelativePanel Margin="8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TextBlock x:Name="label" Style="{StaticResource ContentViewerLabel}" >
        				<Run Text="WebLink:" x:Uid="WebLink" />
                    </TextBlock>
                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}" 
                    Visibility="{Binding Converter={StaticResource HideWhenIsNotEditingConverter}, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}" 
                    RelativePanel.AlignLeftWithPanel="True"  RelativePanel.AlignTopWithPanel="True"/>
                    <StackPanel  x:Name="linkButtons"   Style="{StaticResource LabelButtons}"  Orientation="Horizontal" >

                        <HyperlinkButton  x:Uid="HyperLinkRemoveQuery" Style="{StaticResource LabelButton}" x:Name="linkRemoveQuery"  Command="{Binding CommandRemoveQueryParams}" CommandParameter="{Binding Mode=OneWay}" >
                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE12C;" HorizontalAlignment="Center" VerticalAlignment="Center" />

                            </StackPanel>
                        </HyperlinkButton>
                        <HyperlinkButton   x:Uid="HyperLinkCopy" Style="{StaticResource LabelButton}" x:Name="linkCopy"  Command="{StaticResource copyCommand}" CommandParameter="{Binding Mode=OneWay}" >
                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE16F;" HorizontalAlignment="Center" VerticalAlignment="Center" />

                            </StackPanel>
                        </HyperlinkButton>
                        <HyperlinkButton x:Uid="HyperLinkToText" Style="{StaticResource LabelButton}" x:Name="linkToText"  Command="{Binding CommandCoverterToString}">
                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE14C;" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </StackPanel>
                        </HyperlinkButton>
                        <HyperlinkButton  x:Uid="HyperLinkVisit"  Style="{StaticResource LabelButton}" x:Name="linkVisit"  NavigateUri="{Binding WebLink}">
                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE128;" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </StackPanel>
                        </HyperlinkButton>
                        <HyperlinkButton  x:Uid="HyperLinkUndo" Command="{Binding CommandBackHistory}" >
                            <StackPanel  Orientation="Horizontal" Margin="0,0,12,0">
                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7A7;" />
                            </StackPanel>
                        </HyperlinkButton>
                    </StackPanel>

                    <TextBox 
                        RelativePanel.Below="label"             
                        RelativePanel.Above="linkButtons"                            
                        RelativePanel.AlignRightWithPanel="True" 
                        RelativePanel.AlignLeftWithPanel="True"  
                        ScrollViewer.HorizontalScrollMode="Auto" 
                        ScrollViewer.VerticalScrollMode="Auto"
                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"               
        				x:Name="linkText"  Margin="8" Text="{Binding WebLink, Converter={StaticResource UriStringConverter}, Mode=TwoWay}" HorizontalAlignment="Stretch"  TextWrapping="Wrap"/>


                </RelativePanel>
            </Grid>
        </DataTemplate>
        <Thickness x:Key="ThinBoderThickness">.2</Thickness>
        <DataTemplate x:Key="IndicatorItemTemplate">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="GridViewSingleItemPanel">
            <ItemsWrapGrid  Orientation="Vertical"    >
                <!--<ItemsWrapGrid.Resources>
                    <Style TargetType="Grid">
                        <Setter  Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter  Property="VerticalAlignment" Value="Stretch"/>

                    </Style>
                </ItemsWrapGrid.Resources>-->
                <Interactivity:Interaction.Behaviors>
                    <Glue:SingleItemDisplayBehavior/>
                </Interactivity:Interaction.Behaviors>
            </ItemsWrapGrid>
        </ItemsPanelTemplate>
        <Style x:Key="MsPhoneAppPivotStyle" TargetType="Pivot">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <Grid/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Pivot">
                        <Grid x:Name="RootElement" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Grid.Resources>
                                <Style x:Key="BaseContentControlStyle" TargetType="ContentControl">
                                    <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter Property="FontSize" Value="15"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ContentControl">
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" OpticalMarginAlignment="TrimSideBearings" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Key="TitleContentControlStyle" BasedOn="{StaticResource BaseContentControlStyle}" TargetType="ContentControl">
                                    <Setter Property="FontFamily" Value="{ThemeResource PivotTitleFontFamily}"/>
                                    <Setter Property="FontWeight" Value="{ThemeResource PivotTitleThemeFontWeight}"/>
                                    <Setter Property="FontSize" Value="{ThemeResource PivotTitleFontSize}"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Orientation">
                                    <VisualState x:Name="Portrait">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TitleContentControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotPortraitThemePadding}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Landscape">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TitleContentControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotLandscapeThemePadding}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="NavigationButtonsVisibility">
                                    <VisualState x:Name="NavigationButtonsHidden"/>
                                    <VisualState x:Name="NavigationButtonsVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NextButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="NextButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PreviousButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled" Storyboard.TargetName="PreviousButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HeaderStates">
                                    <VisualState x:Name="HeaderDynamic"/>
                                    <VisualState x:Name="HeaderStatic">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Header">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="StaticHeader">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentControl x:Name="TitleContentControl" ContentTemplate="{TemplateBinding TitleTemplate}" Content="{TemplateBinding Title}" IsTabStop="False" Margin="{StaticResource PivotPortraitThemePadding}" Style="{StaticResource TitleContentControlStyle}" Visibility="Collapsed"/>
                            <Grid Grid.Row="1">
                                <Grid.Resources>
                                    <ControlTemplate x:Key="NextTemplate" TargetType="Button">
                                        <Border x:Name="Root" BorderBrush="{ThemeResource SystemControlForegroundTransparentBrush}" BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}" Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <FontIcon x:Name="Arrow" Foreground="{ThemeResource SystemControlForegroundAltMediumHighBrush}" FontSize="12" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE0E3;" HorizontalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="PreviousTemplate" TargetType="Button">
                                        <Border x:Name="Root" BorderBrush="{ThemeResource SystemControlForegroundTransparentBrush}" BorderThickness="{ThemeResource PivotNavButtonBorderThemeThickness}" Background="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltAltMediumHighBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <FontIcon x:Name="Arrow" Foreground="{ThemeResource SystemControlForegroundAltMediumHighBrush}" FontSize="12" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE0E2;" HorizontalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="False" HorizontalSnapPointsAlignment="Center" HorizontalSnapPointsType="MandatorySingle" HorizontalScrollBarVisibility="Hidden" Margin="{TemplateBinding Padding}" Template="{StaticResource ScrollViewerScrollBarlessTemplate}" VerticalSnapPointsType="None" VerticalScrollBarVisibility="Disabled" VerticalScrollMode="Disabled" VerticalContentAlignment="Stretch" ZoomMode="Disabled">
                                    <PivotPanel x:Name="Panel" VerticalAlignment="Stretch">
                                        <Grid x:Name="PivotLayoutElement">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.RenderTransform>
                                                <CompositeTransform x:Name="PivotLayoutElementTranslateTransform"/>
                                            </Grid.RenderTransform>
                                            <ContentPresenter x:Name="LeftHeaderPresenter" ContentTemplate="{TemplateBinding LeftHeaderTemplate}" Content="{TemplateBinding LeftHeader}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            <ContentControl x:Name="HeaderClipper" Grid.Row="0" Grid.Column="1" HorizontalContentAlignment="Stretch" UseSystemFocusVisuals="True" Margin="0,0,0,10">
                                                <ContentControl.Clip>
                                                    <RectangleGeometry x:Name="HeaderClipperGeometry"/>
                                                </ContentControl.Clip>
                                                <!-- Pivot Header Background -->
                                                <Grid Background="{ThemeResource SystemControlAccentAcrylicWindowAccentMediumHighBrush}" Padding="12,0,12,0">
                                                    <PivotHeaderPanel x:Name="StaticHeader" Visibility="Collapsed" Height="70" HorizontalAlignment="Left" />
                                                    <PivotHeaderPanel x:Name="Header">
                                                        <PivotHeaderPanel.RenderTransform>
                                                            <TransformGroup>
                                                                <CompositeTransform x:Name="HeaderTranslateTransform"/>
                                                                <CompositeTransform x:Name="HeaderOffsetTranslateTransform"/>
                                                            </TransformGroup>
                                                        </PivotHeaderPanel.RenderTransform>
                                                    </PivotHeaderPanel>
                                                </Grid>
                                            </ContentControl>
                                            <Button x:Name="PreviousButton" Background="Transparent" Grid.Column="1" HorizontalAlignment="Left" Height="36" IsTabStop="False" IsEnabled="False" Margin="{ThemeResource PivotNavButtonMargin}" Opacity="0" Template="{StaticResource PreviousTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Top" Width="20"/>
                                            <Button x:Name="NextButton" Background="Transparent" Grid.Column="1" HorizontalAlignment="Right" Height="36" IsTabStop="False" IsEnabled="False" Margin="{ThemeResource PivotNavButtonMargin}" Opacity="0" Template="{StaticResource NextTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Top" Width="20"/>
                                            <ContentPresenter x:Name="RightHeaderPresenter" ContentTemplate="{TemplateBinding RightHeaderTemplate}" Content="{TemplateBinding RightHeader}" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            <ItemsPresenter x:Name="PivotItemPresenter" Grid.ColumnSpan="3" Grid.Row="1">
                                                <ItemsPresenter.RenderTransform>
                                                    <TransformGroup>
                                                        <TranslateTransform x:Name="ItemsPresenterTranslateTransform"/>
                                                        <CompositeTransform x:Name="ItemsPresenterCompositeTransform"/>
                                                    </TransformGroup>
                                                </ItemsPresenter.RenderTransform>
                                            </ItemsPresenter>
                                        </Grid>
                                    </PivotPanel>
                                </ScrollViewer>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="PivotHeaderItem">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="{ThemeResource PivotHeaderItemFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="CharacterSpacing" Value="{ThemeResource PivotHeaderItemCharacterSpacing}" />
            <Setter Property="Background" Value="Transparent" />
            <!-- Pivot Header Text Inactive Foreground -->
            <Setter Property="Foreground" Value="#CCFFFFFF" />
            <Setter Property="Padding" Value="{ThemeResource PivotHeaderItemMargin}" />
            <Setter Property="Height" Value="70" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PivotHeaderItem">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid.Resources>
                                <Style x:Key="BaseContentPresenterStyle" TargetType="ContentPresenter">
                                    <Setter Property="FontFamily" Value="Segoe UI" />
                                    <Setter Property="FontWeight" Value="Light" />
                                    <Setter Property="FontSize" Value="15" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                    <Setter Property="LineStackingStrategy" Value="MaxHeight" />
                                    <Setter Property="TextLineBounds" Value="Full" />
                                    <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings" />
                                </Style>
                                <Style x:Key="BodyContentPresenterStyle" TargetType="ContentPresenter" BasedOn="{StaticResource BaseContentPresenterStyle}">
                                    <Setter Property="FontFamily" Value="{ThemeResource PivotHeaderItemFontFamily}" />
                                    <Setter Property="FontWeight" Value="{ThemeResource PivotHeaderItemThemeFontWeight}" />
                                    <Setter Property="FontSize" Value="{ThemeResource PivotHeaderItemFontSize}" />
                                </Style>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Unselected" To="UnselectedLocked" GeneratedDuration="0:0:0.33" />
                                        <VisualTransition From="UnselectedLocked" To="Unselected" GeneratedDuration="0:0:0.33" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="UnselectedLocked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X" Duration="0" To="{ThemeResource PivotHeaderItemLockedTranslation}" />
                                            <DoubleAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                                <!-- original value {ThemeResource SystemControlHighlightAltBaseHighBrush} -->
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="UnselectedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="UnselectedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" 
                                              Grid.Row="0"  
                                              Content="{TemplateBinding Content}" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Margin="12,0,12,8" 
                                              FontSize="{TemplateBinding FontSize}" 
                                              FontFamily="{TemplateBinding FontFamily}" 
                                              FontWeight="{TemplateBinding FontWeight}" 
                                              MinWidth="45"
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center">
                                <ContentPresenter.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>

                            <!-- Pivoit Bottom Border -->
                            <Border x:Name="SelectedBorder" Grid.Row="1" Background="{ThemeResource SystemControlBackgroundAccentBrush}" Height="3" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
